using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'kangaroo' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER x1
     *  2. INTEGER v1
     *  3. INTEGER x2
     *  4. INTEGER v2
     */

    public static string kangaroo(int x1, int v1, int x2, int v2)
    {
        int kangaroo_one_starting_position = x1;
        int kangaroo_one_velocity = v1;
        int kangaroo_one_current_position = kangaroo_one_starting_position;
        int kangaroo_two_starting_position = x2;
        int kangaroo_two_velocity = v2;
        int kangaroo_two_current_position = kangaroo_two_starting_position;
        
        //if kangaroo two IS faster and perhaps(>=) had a headstart
        if(kangaroo_two_starting_position >= kangaroo_one_starting_position && kangaroo_two_velocity > kangaroo_one_velocity)//kang
        {
            return "NO";
        }
        
        //if kangaroo one IS faster and perhaps(>=) had a headstart
        else if(kangaroo_one_starting_position >= kangaroo_two_starting_position && kangaroo_one_velocity > kangaroo_two_velocity)
        {
            return "NO";
        }
        //if kangaroo two DID have a headstart and perhaps(>=) is faster
        if(kangaroo_two_starting_position > kangaroo_one_starting_position && kangaroo_two_velocity >= kangaroo_one_velocity)//kang
        {
            return "NO";
        }
        
        //if kangaroo one DID have a headstart and perhaps(>=) is faster
        else if(kangaroo_one_starting_position > kangaroo_two_starting_position && kangaroo_one_velocity >= kangaroo_two_velocity)
        {
            return "NO";
        }
        
        else//one kangaroo will overtake another eventually. The question is
        //will they ever land at the same point at the end of each jump.
        {
            //if kangaroo one is currently ahead
            if(kangaroo_one_current_position > kangaroo_two_current_position)
            {
                //while its ahead
                while(kangaroo_one_current_position > kangaroo_two_current_position)
                {
                    //simulate jumps. gaining distance equal to velocity each jump.
                    kangaroo_two_current_position += kangaroo_two_velocity;
                    kangaroo_one_current_position += kangaroo_one_velocity;
                    
                    //if after a certain jump they are in the same position
                    if(kangaroo_one_current_position == kangaroo_two_current_position)
                    {
                        return "YES";
                    }
                    
                    //if kangaroo two has overtaken kangaroo one already, 
                    //it is no longer possible for them to be at the same spot.
                    else if(kangaroo_one_current_position < kangaroo_two_current_position)
                    {
                        return "NO";
                    }
                }
            }
            //Do the same thing, for kangaroo two being ahead
            
            if(kangaroo_two_current_position > kangaroo_one_current_position)
            {
                //While Kangaroo two is ahead
                while(kangaroo_two_current_position > kangaroo_one_current_position)
                {
                    //simulate jumps
                    kangaroo_two_current_position += kangaroo_two_velocity;
                    kangaroo_one_current_position += kangaroo_one_velocity;
                    //if they meet at the same spot
                    if(kangaroo_one_current_position == kangaroo_two_current_position)
                    {
                        return "YES";
                    }
                    //if kangaroo one has overtaken kangaroo two
                    else if(kangaroo_two_current_position < kangaroo_one_current_position)
                    {
                        return "NO";//no longer possible for them to be at the same spot.
                    }
                }
            }
        }
        return "NO";//all other conditionals have failed to bring a yes result, so return NO to be safe here.
    }

}
